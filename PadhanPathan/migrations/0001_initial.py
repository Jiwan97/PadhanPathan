# Generated by Django 3.2 on 2022-05-13 13:39

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100, null=True)),
                ('lastname', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phonenumber', models.CharField(max_length=100, null=True)),
                ('subject', models.CharField(max_length=100, null=True)),
                ('query', models.CharField(max_length=1000, null=True)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('responded', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(default='Not Updated', max_length=200, null=True, verbose_name='Course Name')),
                ('course_summary', models.CharField(default='Not Updated', max_length=200, null=True, verbose_name='Course Summary')),
                ('to_learn', ckeditor.fields.RichTextField(default='You can join this course right away', max_length=50000, null=True, verbose_name='What students needs to learn before joining this course')),
                ('course_pic', models.ImageField(default='static/images/slider-01.jpg', max_length=500, upload_to='static/uploads', verbose_name='Course Pic')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('category', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ExamNumber', models.PositiveSmallIntegerField(null=True, verbose_name='Exam Number')),
                ('ExamTitle', models.CharField(default='Not Updated', max_length=500, null=True, verbose_name='Title')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.course')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(default='Not Updated', max_length=200, null=True, validators=[django.core.validators.MinLengthValidator(4)], verbose_name='Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(default='Not Updated', null=True, validators=[django.core.validators.MinLengthValidator(4)], verbose_name='Put Your Content Here')),
                ('news_pic', models.ImageField(default='static/images/newsDefault.jpg', max_length=500, upload_to='static/uploads', verbose_name='News Pic')),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('Tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', ckeditor_uploader.fields.RichTextUploadingField(default='Paste Your Question in PDF Format HERE', max_length=5000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('exammodel', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.exammodel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamQNA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numb', models.PositiveSmallIntegerField(default=0, verbose_name='Number')),
                ('question', models.CharField(max_length=5000, null=True)),
                ('option1', models.CharField(max_length=5000, null=True, verbose_name='Option 1')),
                ('option2', models.CharField(max_length=5000, null=True, verbose_name='Option 2')),
                ('option3', models.CharField(max_length=5000, null=True, verbose_name='Option 3')),
                ('option4', models.CharField(max_length=5000, null=True, verbose_name='Option 4')),
                ('answer', models.CharField(max_length=5000, null=True, verbose_name='Answer')),
                ('exammodel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.exammodel')),
            ],
        ),
        migrations.CreateModel(
            name='ExamAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.PositiveIntegerField(default=600)),
                ('attempted', models.BooleanField(default=False)),
                ('answer', ckeditor_uploader.fields.RichTextUploadingField(default='Paste Your Answer in PDF format here', max_length=5000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('examquestion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.examquestion')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(default='Not Updated', max_length=50000, null=True)),
                ('rate', models.PositiveSmallIntegerField(choices=[(1, '1-Star'), (2, '2-Star'), (3, '3-Star'), (4, '4-Star'), (5, '5-Star')], verbose_name='Choose Your Rating')),
                ('edited', models.BooleanField(default=False)),
                ('date_commented', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.course')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modulenumber', models.IntegerField(null=True, verbose_name='Lecture Number')),
                ('module', models.CharField(max_length=200, null=True, verbose_name='Module Name')),
                ('ModuleLecture', ckeditor_uploader.fields.RichTextUploadingField(max_length=50000, null=True, verbose_name='Module Lecture')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.course')),
            ],
            options={
                'ordering': ('modulenumber',),
            },
        ),
        migrations.CreateModel(
            name='CourseLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('like', models.BooleanField(default=False)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.course')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseEnrollement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('enrolled', models.BooleanField(default=False)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.course')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(default='Not Updated', max_length=200, null=True, validators=[django.core.validators.MinLengthValidator(4)])),
                ('date_commented', models.DateTimeField(auto_now_add=True)),
                ('news', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.news')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attempted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_attempted', models.DateTimeField(auto_now_add=True)),
                ('attempted', models.BooleanField(default=False)),
                ('user_score', models.PositiveSmallIntegerField(default=0, verbose_name='Score')),
                ('exammodel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='PadhanPathan.exammodel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
